// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webpage.API.Data;

namespace Webpage.API.Data.Migrations
{
    [DbContext(typeof(WebpageDbContext))]
    [Migration("20190618160734_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Webpage.API.Model.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlockClass");

                    b.Property<string>("Code");

                    b.Property<string>("Content");

                    b.Property<bool>("IsSystem");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("Webpage.API.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("Description");

                    b.Property<int?>("PageId");

                    b.Property<int?>("ParentId");

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Webpage.API.Model.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int?>("FooterId");

                    b.Property<int?>("HeaderId");

                    b.Property<int?>("LayoutId");

                    b.Property<int>("PageClass");

                    b.Property<int?>("PostType");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("FooterId");

                    b.HasIndex("HeaderId");

                    b.HasIndex("LayoutId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("Webpage.API.Model.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("Count");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("PageId");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Webpage.API.Model.Category", b =>
                {
                    b.HasOne("Webpage.API.Model.Page")
                        .WithMany("Categories")
                        .HasForeignKey("PageId");

                    b.HasOne("Webpage.API.Model.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Webpage.API.Model.Page", b =>
                {
                    b.HasOne("Webpage.API.Model.Block", "Footer")
                        .WithMany()
                        .HasForeignKey("FooterId");

                    b.HasOne("Webpage.API.Model.Block", "Header")
                        .WithMany()
                        .HasForeignKey("HeaderId");

                    b.HasOne("Webpage.API.Model.Block", "Layout")
                        .WithMany()
                        .HasForeignKey("LayoutId");
                });

            modelBuilder.Entity("Webpage.API.Model.Tag", b =>
                {
                    b.HasOne("Webpage.API.Model.Page")
                        .WithMany("Tags")
                        .HasForeignKey("PageId");
                });
#pragma warning restore 612, 618
        }
    }
}
